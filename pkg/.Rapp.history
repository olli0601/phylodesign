load("/Users/Oliver/workspace_sandbox/phylodylib/examples/NBH3N2_NL_EU101027_observedsus.R")
simu
sim
simuobs
os
m<- read.csv("~/workspace_sandbox/phylodylib/examples/NL_ILI_negbin_m7_1994_2009.csv")
m
m<- read.csv("~/workspace_sandbox/phylodylib/examples/NL_ILI_negbin_m7_1994_2009.csv", sep='\t')
m
m2<- m[,"Year","Week","Time","H3N2.specific..per.10.000."]
colnames(m)
m2<- m[,c("Year","Week","Time","H3N2.specific..per.10.000.")]
m2[1:10]
m2[1:10,]
m2
f<- "/Users/Oliver/workspace_sandbox/phylodylib/examples/NL_ILI_negbin_m7_1994_2009_H3N2.csv"
h3n2.data<- m2
save(h3n2.data, file=f)
f<- "/Users/Oliver/workspace_sandbox/phylodylib/examples/NL_ILI_negbin_m7_1994_2009_H3N2.R"
save(h3n2.data, file=f)
library(GillespieSSA)
Logistic growth model#
a = function(parms,x){#
b <- parms[1]#
d <- parms[2]#
K <- parms[3]#
N <- x[1]#
return(c(b*N , N*b + (b-d)*N/K))#
}#
parms <- c(2,1,1000,500)#
x <- 500#
nu <- matrix(c(+1, -1),ncol=2)#
t <- 0#
for (i in seq(100)) {#
out <- ssa.d(a(parms,x),nu)#
x <- x + out$nu_j#
t <- t + 1#
cat("t:",t,", x:",x,"\n")#
}
ssa.d
?data.frame
data.frame( sample(attr$gender,size=size, replace=TRUE, prob= c(0.5,0.5)) )
data.frame( sample(factor(c('m','f')),size=10, replace=TRUE, prob= c(0.5,0.5)) )
tmp<- factor(c('m','f'))
data.frame( sample(tmp,size=10, replace=TRUE, prob= c(0.5,0.5)) )
y<- data.frame( sample(tmp,size=10, replace=TRUE, prob= c(0.5,0.5)) )
y
?eval
rep(0.5,2)
diag(c(0.5,0.4),2)
f<- "/Users/Oliver/workspace_sandbox/phylodylib/examples/NL_ILI_negbin_m7_1994_2009_H3N2.R"\\
theta<- 4
rep( (3 - theta)/2, 2)
0.17*.3
?data.frame
30*4 + 508/2 + 1152/2
30*4 + 508/1 + 1152/1
ssa.d
m<- matrix(1:9,3,3)
sample(1:9,4,replace=1)
sample(1:9,4,replace=1)/3
sample(1:9,4,replace=1)%/%3
sample(1:9,4,replace=1)%%3
x<- sample(1:9,4,replace=1)
x
x%%3
(x-1)%%3
(x-1)%%3+1
x%/%3
?select
?subset
0.0125 * 1e4
1/ (0.0125 * 1e4)
50/1500
?read.tree
library(ape)
?read.tree
read.tree(text="(A:1,B:1):10;")
read.tree(text="(A:1,B:1,C:1):10;")
plot(read.tree(text="(A:1,B:1,C:1):10;"))
example of using 'incomparables'#
x <- data.frame(k1=c(NA,NA,3,4,5), k2=c(1,NA,NA,4,5), data=1:5)#
y <- data.frame(k1=c(NA,2,NA,4,5), k2=c(NA,NA,3,4,5), data=1:5)
x
y
merge(x, y, by=c("k1","k2")) # NA's match
library(compiler)
setwd("/Users/Oliver/git/phylodesign/pkg")
source("misc/phdes.startme.R")
source("misc/phdes.startme.R")

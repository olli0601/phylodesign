ncol(seq.PROT.RT)<- 1624
dim(seq.PROT.RT)[2]<- 1624
dim(seq.PROT.RT)
seq.PROT.RT							<- seq.PROT.RT[,1:1624]
file
file<- "/Users/Oliver/duke/2013_HIV_NL/ATHENA_2013/data/tmp/ATHENA_2013_03_FirstAliSequences_HXB2PROTRT_Wed_May__1_17:08:15_2013.fasta.clustalo3"
write.dna(as.DNAbin(seq.PROT.RT), file=file, format="fasta", colsep='', colw=ncol(seq.PROT.RT), blocksep=0)
apply(matrix(c(1,2,3,4),2,2),1,sum)
tmp<- apply(seq.PROT.RT,1,function(x)		which(rev(x)!="-" )[1]  )
tmp
?sort
seq.PROT.RT							<- seq.PROT.RT[sort(seq.PROT.RT.sort.by, index.return=1)$ix,]
seq.PROT.RT.sort.by<- mtp
seq.PROT.RT.sort.by<- tmp
seq.PROT.RT							<- seq.PROT.RT[sort(seq.PROT.RT.sort.by, index.return=1)$ix,]
write.dna(as.DNAbin(seq.PROT.RT), file=file, format="fasta", colsep='', colw=ncol(seq.PROT.RT), blocksep=0)
file
seq.PROT.RT							<- read.dna(file, format="fasta", as.character=1)
seq.PROT.TR[1,1294:1299]
seq.PROT.RT[1,1294:1299]
dim(seq.PROT.RT)
file
seq.PROT.RT							<- read.dna(file, format="fasta", as.character=1)
dim(seq.PROT.RT)
seq.PROT.RT							<- read.dna(file, format="fasta", as.character=1)
dim(seq.PROT.RT)
seq.PROT.RT[1,1294:1299]
seq.PROT.RT[,1294:1299]				<- matrix( c("-","-","-","-","-","-"), nrow=length(query.yes), ncol=6, byrow=1 )
seq.PROT.RT[,1294:1299]				<- matrix( c("-","-","-","-","-","-"), nrow=ncol(seq.PROT.RT), ncol=6, byrow=1 )
seq.PROT.RT[,1294:1299]				<- matrix( c("-","-","-","-","-","-"), nrow=nrow(seq.PROT.RT), ncol=6, byrow=1 )
file<- "/Users/Oliver/duke/2013_HIV_NL/ATHENA_2013/data/tmp/ATHENA_2013_03_FirstAliSequences_HXB2PROTRT_Wed_May__1_17:08:15_2013.fasta.clustalo4"
write.dna(as.DNAbin(seq.PROT.RT), file=file, format="fasta", colsep='', colw=ncol(seq.PROT.RT), blocksep=0)
which( rownames(seq.PROT.RT)=="HXB2" )
signat.in	<- "Wed_May__1_17/08/15_2013"#
		signat.out	<- paste(strsplit(date(),split=' ')[[1]],collapse='_',sep='')#
		file<- paste(outdir,"/ATHENA_2013_03_FirstAliSequences_HXB2PROTRT_",gsub('/',':',signat.in),".fasta.clustalo4",sep='')
file
seq.PROT.RT	<- read.dna(file, format="fasta")
dim(seq.PROT.RT)
seq.PROT.RT	<- seq.PROT.RT[ rownames(seq.PROT.RT)!="HXB2", ]
signat.out	<- paste(strsplit(date(),split=' ')[[1]],collapse='_',sep='')
signat.out
file		<- paste(outdir,"/ATHENA_2013_03_FirstCurSequences_PROTRT_",gsub('/',':',signat.out),".R",sep='')
verbose<- 1
if(verbose) cat(paste("\nwrite to",file))#
		save(seq.PROT.RT, file=file)#
		file		<- paste(outdir,"/ATHENA_2013_03_FirstCurSequences_PROTRT_",gsub('/',':',signat.out),".phylip",sep='')#
		if(verbose) cat(paste("\nwrite to ",file))
hivc.seq.write.dna.phylip<- function(seq.DNAbin.mat, file)#
{		#
	tmp<- cbind( rownames(seq.DNAbin.mat), apply( as.character( seq.DNAbin.mat ), 1, function(x) paste(x,sep='',collapse='')  ) )#
	tmp<- paste(t(tmp),collapse='\n',sep='')	#
	tmp<- paste( paste(c(nrow(seq.DNAbin.mat),ncol(seq.DNAbin.mat)),sep='',collapse=' '),'\n',tmp,'\n',collapse='',sep='' )#
	cat(tmp, file=file)#
}
hivc.seq.write.dna.phylip(seq.PROT.RT, file=file)
70-33
2013+37
37700+45000
outdir
signat.in	<- "Sat_May_11_14:23:46_2013"#
		signat.out	<- "Sat_May_11_14:23:46_2013"#
#
		file		<- paste(outdir,"/ATHENA_2013_03_FirstCurSequences_PROTRT_",gsub('/',':',signat.in),".R",sep='')#
		if(verbose) cat(paste("\nload ",file))			#
		load(file)
seq.PROT.RT
seq.PROT.RT[1,]
x<- as.character(seq.PROT.RT[1,])
x
codon3.idx<- seq.int(3,ncol(seq.PROT.RT),3)
seq.PROT.RT3<- seq.PROT.RT[, codon3.idx]
seq.PROT.RT3
x<- as.character(seq.PROT.RT3[1,])
xa<- as.character(seq.PROT.RT[1,])
all(xa[codon3.idx]==x)
verbose<- 1
file		<- paste(outdir,"/ATHENA_2013_03_FirstCurSequences_PROTRTCD3_",gsub('/',':',signat.out),".R",sep='')#
		if(verbose) cat(paste("\nwrite to ",file))#
		save(seq.PROT.RT3, file=file)
file		<- paste(outdir,"/ATHENA_2013_03_FirstCurSequences_PROTRTCD3_",gsub('/',':',signat.out),".phylip",sep='')#
		if(verbose) cat(paste("\nwrite to ",file))#
		hivc.seq.write.dna.phylip(seq.PROT.RT3, file=file)
seq.PROT.RT3[1,]
library(roxygen2)#
DIR_PKG<-"/Users/tonton/Documents/GitProjects/nABC/git_abc.n/pkg"#
DIR_PKG<-"/Users/Oliver/git/abc.n/pkg"#
roxygenize(package=paste(DIR_PKG))
setwd("/Users/Oliver/git/abc.n/pkg")
source("misc/nabc.startme.R")
xn <- 60#
yn <- xn#
xmean <- 2#
xsigma <- 1#
ymean <- 2#
ysigma <- 0.5#
#
obs <- rnorm(xn, xmean, xsigma)#
obs <- (obs - mean(obs))/sd(obs) * xsigma + xmean#
sim <- rnorm(yn, ymean, ysigma)#
#
n.of.x <- xn#
s.of.x <- sd(obs)#
n.of.y <- yn#
s.of.y <- sd(sim)#
mx.pw <- 0.9#
alpha <- 0.01#
tau.u.ub <- 2
xn <- 60#
yn <- xn#
xmean <- 1#
xsigma <- 1#
ymean <- 1#
ysigma <- 2#
#
obs <- rnorm(xn, xmean, xsigma)#
obs <- (obs - mean(obs))/sd(obs) * xsigma + xmean#
sim <- rnorm(yn, ymean, ysigma)#
#
n.of.x <- xn#
s.of.x <- sd(obs)#
n.of.y <- yn#
s.of.y <- sd(sim)#
mx.pw <- 0.9#
alpha <- 0.01#
tau.u.ub <- 2
nabc.calibrate.m.and.tau.yesmxpw.yesKL("nabc.mutost.kl", args = list(n.of.x = n.of.x, s.of.x = s.of.x, n.of.y = n.of.y, s.of.y = s.of.y, #
	mx.pw = mx.pw, alpha = alpha, calibrate.tau.u = T, tau.u = tau.u.ub), plot = T)
require(ggplot2)
nabc.calibrate.m.and.tau.yesmxpw.yesKL("nabc.mutost.kl", args = list(n.of.x = n.of.x, s.of.x = s.of.x, n.of.y = n.of.y, s.of.y = s.of.y, #
	mx.pw = mx.pw, alpha = alpha, calibrate.tau.u = T, tau.u = tau.u.ub), plot = T)
require(reshape)
nabc.calibrate.m.and.tau.yesmxpw.yesKL("nabc.mutost.kl", args = list(n.of.x = n.of.x, s.of.x = s.of.x, n.of.y = n.of.y, s.of.y = s.of.y, #
	mx.pw = mx.pw, alpha = alpha, calibrate.tau.u = T, tau.u = tau.u.ub), plot = T)
nabc.chisqstretch.kl(n.of.x, s.of.x, n.of.y, s.of.y, mx.pw, alpha, calibrate.tau.u = T, tau.u = tau.u.ub, plot = T)
require(pscl)
nabc.chisqstretch.kl(n.of.x, s.of.x, n.of.y, s.of.y, mx.pw, alpha, calibrate.tau.u = T, tau.u = tau.u.ub, plot = T)
nabc.calibrate.m.and.tau.yesmxpw.yesKL("nabc.chisqstretch.kl", args = list(n.of.x = n.of.x, s.of.x = s.of.x, n.of.y = n.of.y, #
	s.of.y = s.of.y, mx.pw = mx.pw, alpha = alpha, calibrate.tau.u = T, tau.u = tau.u.ub), plot = T)
xn <- 60#
yn <- xn#
xmean <- 1#
xsigma <- 1#
ymean <- 1#
ysigma <- 2#
#
ymean <- xmean <- 0#
ysigma <- 1#
#
obs <- rnorm(xn, xmean, xsigma)#
obs <- (obs - mean(obs))/sd(obs) * xsigma + xmean#
sim <- rnorm(yn, ymean, ysigma)#
#
n.of.x <- xn#
s.of.x <- sd(obs)#
n.of.y <- yn#
s.of.y <- sd(sim)#
mx.pw <- 0.9#
alpha <- 0.01#
tau.u.ub <- 2
nabc.calibrate.m.and.tau.yesmxpw.yesKL("nabc.chisqstretch.kl", args = list(n.of.x = n.of.x, s.of.x = s.of.x, n.of.y = n.of.y, #
	s.of.y = s.of.y, mx.pw = mx.pw, alpha = alpha, calibrate.tau.u = T, tau.u = tau.u.ub), plot = T)
nabc.calibrate.m.and.tau.yesmxpw.yesKL("nabc.chisqstretch.kl", args = list(n.of.x = n.of.x, s.of.x = s.of.x, n.of.y = n.of.y, #
	s.of.y = NA, mx.pw = mx.pw, alpha = alpha, calibrate.tau.u = T, tau.u = tau.u.ub), plot = T)
nabc.calibrate.m.and.tau.yesmxpw.yesKL("nabc.chisqstretch.kl", args = list(n.of.x = n.of.x, s.of.x = s.of.x, n.of.y = n.of.y, #
	s.of.y = NA, mx.pw = mx.pw, alpha = alpha, calibrate.tau.u = T, tau.u = tau.u.ub, for.mle=1), plot = T)
library(roxygen2)#
DIR_PKG<-"/Users/tonton/Documents/GitProjects/nABC/git_abc.n/pkg"#
DIR_PKG<-"/Users/Oliver/git/abc.n/pkg"#
roxygenize(package=paste(DIR_PKG))
library(roxygen2)#
DIR_PKG<-"/Users/tonton/Documents/GitProjects/nABC/git_abc.n/pkg"#
DIR_PKG<-"/Users/Oliver/git/abc.n/pkg"#
roxygenize(package=paste(DIR_PKG))
source("misc/nabc.startme.R")
source("misc/nabc.startme.R")
source("misc/nabc.startme.R")
source("misc/nabc.startme.R")
traceback()
traceback()
source("misc/nabc.startme.R")
source("misc/nabc.startme.R")
source("misc/nabc.startme.R")
source("misc/nabc.startme.R")
source("misc/nabc.startme.R")
source("misc/nabc.startme.R")
source("misc/nabc.startme.R")
source("misc/nabc.startme.R")
?optimize
35000 * 0.0015
1/0.84
1/0.848
1/1.16
37000*0.8399
37000*0.844
37000*0.8443
37000*0.8443 - 37000*0.8399
160/37000
37000*0.846
37000*0.845
37000*0.85
source("misc/nabc.startme.R")
source("misc/nabc.startme.R")
source("misc/nabc.startme.R")
source("misc/nabc.startme.R")
source("misc/nabc.startme.R")
source("misc/nabc.startme.R")
source("misc/nabc.startme.R")
source("misc/nabc.startme.R")
source("misc/nabc.startme.R")
source("misc/nabc.startme.R")
0.0289720691211937+0.0355260284565393+0.0289722479523953
0.0934089544518847+0.0968689133533543+0.0934057893458528
0.28/0.09
CODE.HOME<<- "/Users/Oliver/git/phylodesign/pkg"
roxygenize(CODE.HOME)
3
6
9
12
15
18
21
24
27
30
33
35
setwd("/Users/Oliver/git/phylodesign/pkg")
source("misc/phdes.startme.R")
paste('n',seq.int(0,st.mx), sep='')
paste('n',seq.int(0,3), sep='')
source("misc/phdes.startme.R")
traceback()
traceback()
source("misc/phdes.startme.R")
source("misc/phdes.startme.R")
traceback()
source("misc/phdes.startme.R")
traceback()
source("misc/phdes.startme.R")
source("misc/phdes.startme.R")
source("misc/phdes.startme.R")
source("misc/phdes.startme.R")
source("misc/phdes.startme.R")
source("misc/phdes.startme.R")
source("misc/phdes.startme.R")
source("misc/phdes.startme.R")
source("misc/phdes.startme.R")
source("misc/phdes.startme.R")
source("misc/phdes.startme.R")
source("misc/phdes.startme.R")
NA/NA
source("misc/phdes.startme.R")
source("misc/phdes.startme.R")
source("misc/phdes.startme.R")
source("misc/phdes.startme.R")
source("misc/phdes.startme.R")
source("misc/phdes.startme.R")
source("misc/phdes.startme.R")
source("misc/phdes.startme.R")
sum(c(NA),na.rm=1)
source("misc/phdes.startme.R")
source("misc/phdes.startme.R")
choose(1,0)
choose(2,0)
choose(0,0)
6065*0.7
str(matrix(NA,2,2))
str(matrix(NA,1,1))
str(data.frame(NA,1,1))
?subset
?subset.data.table
?data.table:::subset
(x <- c(sort(sample(1:20, 9)),NA))#
(y <- c(sort(sample(3:23, 7)),NA))
setequal(x,y)
setequal(x,x)
factorial(0)
?dmultinom
(x <- c(sort(sample(1:20, 9)),NA))#
(y <- c(sort(sample(3:23, 7)),NA))
5.8 + 2.2 * 2
3.55 + 4.57
10.2 * 3.7
6.7*8.12
6.7*8.12 + 10.2 * 3.7
source("misc/phdes.startme.R")
source("misc/phdes.startme.R")
m.type				<- "Acute"#
	loc.type			<- "ZA-C"#
	m.popsize			<- 6e4#
	m.known.states		<- 0#
	theta0				<- c(8, 0.09, 0, 0)#
	names(theta0)		<- c("acute","base","m.st1","m.st2")#
	sample.prob			<- c(0.7,0.7)#
	names(sample.prob)	<- c("Idx","E")	#
	m.repeat			<- 1#
	resume				<- 1#
	verbose				<- 1	#
	cat(paste("\nm.popsize ",m.popsize))#
	cat(paste("\nloc.type ",loc.type))	#
	cat(paste("\nm.known.states ",m.known.states))#
	cat(paste("\nm.repeat ",m.repeat))#
	cat(paste("\nacute.MAX.TIPC.SIZE ",acute.MAX.TIPC.SIZE))	#
	cat(paste("\ntheta0.acute ",theta0[1]))#
	cat(paste("\ntheta0.base ",theta0[2]))#
	cat(paste("\nsample.prob.Idx ",sample.prob[1]))#
	cat(paste("\nsample.prob.E ",sample.prob[2]))#
	cat(paste("\nverbose ",verbose))#
	cat(paste("\nresume ",resume))#
	my.mkdir(DATA,"acutecld")#
	dir.name<- paste(DATA,"simudata",sep='/')#
	f.name<- paste(dir.name,paste("tpcdat_",m.type,"_",loc.type,"_n",m.popsize,"_rI",theta0[1],"_b",theta0[2],"_sIdx",sample.prob[1],"_sE",sample.prob[2],sep=''),sep='/')					#
	#tmp<- paste(f.name,"_example_contingencytable_upto3.R",sep='')	#
	tmp<- paste(f.name,".R",sep='')#
	cat(paste("\nload ",tmp))		#
	load(tmp)
theta.acute	<- 	seq(1,10,0.25)#10#
		theta.base	<-	seq(0.03,0.16,0.01)#0.16
theta	<- expand.grid(acute= theta.acute, base= theta0[2])
theta
sample.prob2	<- sample.prob#
	sample.prob2[]	<- c(1,1)
sample.prob2
compare tip cluster distribution as 'acute' varies#
	lkl		<- sapply(seq_len(nrow(theta)),function(i)#
			{																		#
				ans	<- sapply(c(1), function(r)#
						{							#
							ibm		<- tpc[[r]][["ibm"]]#
							if(!m.known.states)#
							{#
								ibm	<- ibm.init.model(m.type, loc.type, m.popsize, theta0, resume= 0)#
								ibm	<- ibm.collapse(ibm)								#
							}	#
							ibm[["beta"]][['i']][["status"]]['i']	<- theta[i,"acute"]#
							ibm[["beta"]][["base"]]					<- theta[i,"base"]	#
							beta.stratified							<- acute.get.rates(ibm, per.capita.i=1)#
							tipc.table								<- tpc[[r]][["tpc.table.all"]]#
							print(beta.stratified)#
							print(tipc.table)#
							tmp										<- acute.loglkl(tipc.table, beta.stratified, sample.prob2, tpc[[r]][["ibm"]][["beta"]][["dT"]])[["tipc.lkl"]]#
							print(tmp)#
							stop()#
							tmp#
						})#
				names(ans)<- paste('r',seq_along(ans),sep='')#
				ans#
			})
traceback()
acute.loglkl<- function(tpc, rate.m, sample.prob, dT, clu.n=NULL)#
{#
#print(tpc); print(rate.m)		#
	ans			<- numeric(2)#
	tpc.n.mx	<- ncol(tpc)-1														#max number of transmissions in tip cluster  	#
	tpc.closure	<- ifelse(all(sample.prob==1), tpc.n.mx, acute.MAX.TIPC.SIZE)		#without sampling, need to compute probabilities only up to the largest number of transmissions in the any tip cluster#
	if(tpc.n.mx>tpc.closure)	#
		stop(paste("\nfound tip cluster sizes",tpc.n.mx,"while max supported is",tpc.closure))#
	if(is.null(clu.n))	#
		clu.n	<- clu.n.of.tchain(tpc.closure)#
#print(clu.n)#
	#get transmission chain likelihoods for those that start with 'U'#
	chain.lkl	<- sapply(seq.int(0,ncol(clu.n)-1),function(ntrm)#
			{				#
				tmp<- sapply( 	seq.int(0,ntrm), function(nx){		acute.lkl.tree.xk.ik(nx,ntrm-nx,rate.m['u','s'],rate.m['i','s'],dT,log=0) 			})#
				c(tmp,rep(0, ncol(clu.n)-1-ntrm))#
			})#
	#multiply with possible number of combinations#
	chain.lkl			<- chain.lkl * clu.n#
	colnames(chain.lkl)	<- paste('n',seq.int(0,ncol(chain.lkl)-1),sep='')#
	rownames(chain.lkl)	<- paste('idx',seq.int(0,nrow(chain.lkl)-1),sep='')	#
	if(any(sample.prob!=1))#
		chain.lkl		<- clu.p.of.tchain.rnd.sampling(chain.lkl, sample.prob, mx.s.ntr=min(tpc.n.mx+1,tpc.closure), log=0, clu.p.norm=0, rtn.only.closure.sum=0 )#
#print(chain.lkl)	#
	#the [idx0, seq.int(2,ncol(chain.lkl))] are tip clusters starting with an 'E' index case#
	tipc.lkl.E			<- c( chain.lkl[1,seq.int(2,ncol(chain.lkl))] )#
	chain.lkl[1,seq.int(2,ncol(chain.lkl))]	<- 0	#
	chain.lkl			<- chain.lkl[,-ncol(chain.lkl)]#
	#integrate transmission chains out#
	tipc.lkl.U			<- apply(chain.lkl,2,function(x) sum(x, na.rm=1))#
	##
	#get transmission chain likelihoods for those that start with 'T'#
	##
	chain.lkl	<- sapply(seq.int(0,ncol(clu.n)-1),function(ntrm)#
			{				#
				tmp<- sapply( 	seq.int(0,ntrm), function(nx){		acute.lkl.tree.xk.ik(nx,ntrm-nx,rate.m['t','s'],rate.m['i','s'],dT,log=0) 			})#
				c(tmp,rep(0, ncol(clu.n)-1-ntrm))#
			})#
	#multiply with possible number of combinations#
	chain.lkl			<- chain.lkl * clu.n	#
	colnames(chain.lkl)	<- paste('n',seq.int(0,ncol(chain.lkl)-1),sep='')#
	rownames(chain.lkl)	<- paste('idx',seq.int(0,nrow(chain.lkl)-1),sep='')#
	if(any(sample.prob!=1))#
		chain.lkl		<- clu.p.of.tchain.rnd.sampling(chain.lkl, sample.prob, mx.s.ntr=min(tpc.n.mx+1,tpc.closure), log=0, clu.p.norm=0, rtn.only.closure.sum=0 )#
#print(chain.lkl)		#
	#the [idx0, seq.int(2,ncol(chain.lkl))] are tip clusters starting with an 'E' index case#
#print(tipc.lkl.E)#
	tipc.lkl.E			<- tipc.lkl.E + c( chain.lkl[1,seq.int(2,ncol(chain.lkl))] )#
	names(tipc.lkl.E)	<- paste("ns",seq.int(0,length(tipc.lkl.E)-1))#
#print(tipc.lkl.E)	#
	chain.lkl[1,seq.int(2,ncol(chain.lkl))]	<- 0	#
	chain.lkl			<- chain.lkl[,-ncol(chain.lkl)]#
	#integrate transmission chains out#
	tipc.lkl.T			<- apply(chain.lkl,2,function(x) sum(x, na.rm=1))#
	#multinomial observation model	#
	tipc.lkl			<- rbind(tipc.lkl.E,rbind(tipc.lkl.U,tipc.lkl.T))#
	rownames(tipc.lkl)	<- c('i','u','t')#
	print(tipc.lkl); print(tpc)	#
	if(ncol(tipc.lkl)!=ncol(tpc))	stop("columns of tipc.lkl and tpc do not match")#
	if(nrow(tipc.lkl)!=nrow(tpc))	stop("rows of tipc.lkk and tpc do not match")#
#print(tipc.lkl); print(tpc)#
	table.lkl<- dmultinom(as.vector(tpc), size=NULL, prob= as.vector(tipc.lkl), log=1)#
	list(table.lkl= table.lkl, tipc.lkl=tipc.lkl)	#
}
compare tip cluster distribution as 'acute' varies#
	lkl		<- sapply(seq_len(nrow(theta)),function(i)#
			{																		#
				ans	<- sapply(c(1), function(r)#
						{							#
							ibm		<- tpc[[r]][["ibm"]]#
							if(!m.known.states)#
							{#
								ibm	<- ibm.init.model(m.type, loc.type, m.popsize, theta0, resume= 0)#
								ibm	<- ibm.collapse(ibm)								#
							}	#
							ibm[["beta"]][['i']][["status"]]['i']	<- theta[i,"acute"]#
							ibm[["beta"]][["base"]]					<- theta[i,"base"]	#
							beta.stratified							<- acute.get.rates(ibm, per.capita.i=1)#
							tipc.table								<- tpc[[r]][["tpc.table.all"]]#
							print(beta.stratified)#
							print(tipc.table)#
							tmp										<- acute.loglkl(tipc.table, beta.stratified, sample.prob2, tpc[[r]][["ibm"]][["beta"]][["dT"]])[["tipc.lkl"]]#
							print(tmp)#
							stop()#
							tmp#
						})#
				names(ans)<- paste('r',seq_along(ans),sep='')#
				ans#
			})
source("misc/phdes.startme.R")
source("misc/phdes.startme.R")
source("misc/phdes.startme.R")
source("misc/phdes.startme.R")
m.type				<- "Acute"#
	loc.type			<- "ZA-C"#
	m.popsize			<- 6e4#
	m.known.states		<- 0#
	theta0				<- c(8, 0.09, 0, 0)#
	names(theta0)		<- c("acute","base","m.st1","m.st2")#
	sample.prob			<- c(0.7,0.7)#
	names(sample.prob)	<- c("Idx","E")	#
	m.repeat			<- 1#
	resume				<- 1#
	verbose				<- 1	#
	cat(paste("\nm.popsize ",m.popsize))#
	cat(paste("\nloc.type ",loc.type))	#
	cat(paste("\nm.known.states ",m.known.states))#
	cat(paste("\nm.repeat ",m.repeat))#
	cat(paste("\nacute.MAX.TIPC.SIZE ",acute.MAX.TIPC.SIZE))	#
	cat(paste("\ntheta0.acute ",theta0[1]))#
	cat(paste("\ntheta0.base ",theta0[2]))#
	cat(paste("\nsample.prob.Idx ",sample.prob[1]))#
	cat(paste("\nsample.prob.E ",sample.prob[2]))#
	cat(paste("\nverbose ",verbose))#
	cat(paste("\nresume ",resume))#
	my.mkdir(DATA,"acutecld")#
	dir.name<- paste(DATA,"simudata",sep='/')#
	f.name<- paste(dir.name,paste("tpcdat_",m.type,"_",loc.type,"_n",m.popsize,"_rI",theta0[1],"_b",theta0[2],"_sIdx",sample.prob[1],"_sE",sample.prob[2],sep=''),sep='/')					#
	#tmp<- paste(f.name,"_example_contingencytable_upto3.R",sep='')	#
	tmp<- paste(f.name,".R",sep='')#
	cat(paste("\nload ",tmp))		#
	load(tmp)
theta	<- expand.grid(acute= seq(1,10,1), base= theta0[2])#
	print(theta)#
	sample.prob2	<- sample.prob#
	sample.prob2[]	<- c(1,1)#
	#compare tip cluster distribution as 'acute' varies#
	cld		<- lapply(seq_len(nrow(theta)),function(i)#
			{																		#
				ans	<- lapply(c(1), function(r)#
						{							#
							ibm		<- tpc[[r]][["ibm"]]#
							if(!m.known.states)#
							{#
								ibm	<- ibm.init.model(m.type, loc.type, m.popsize, theta0, resume= 0)#
								ibm	<- ibm.collapse(ibm)								#
							}	#
							ibm[["beta"]][['i']][["status"]]['i']	<- theta[i,"acute"]#
							ibm[["beta"]][["base"]]					<- theta[i,"base"]	#
							beta.stratified							<- acute.get.rates(ibm, per.capita.i=1)#
							tipc.table								<- tpc[[r]][["tpc.table.all"]]#
							print(beta.stratified)#
							print(tipc.table)#
							tipc.lkl								<- acute.loglkl(tipc.table, beta.stratified, sample.prob2, tpc[[r]][["ibm"]][["beta"]][["dT"]])[["tipc.lkl"]]#
							tipc.lkl / sum(tipc.lkl)							#
						})#
				names(ans)<- paste('r',seq_along(ans),sep='')#
				ans[[1]]#
			})
print(cld)
tmp<- lappl(cld, function(x)   apply(x,2,sum)		)#
	print(tmp)
tmp<- lapply(cld, function(x)   apply(x,2,sum)		)#
	print(tmp)
tmp<- sapply(cld, function(x)   apply(x,2,sum)		)#
	print(tmp)
plot(1,1,type='n',xlim=range(theta.acute),ylim=range(tmp))#
	cols<- rainbow(ncol(tmp))#
	sapply(seq_len(ncol(tmp)),function(j)   lines(tmp[,j],col=cols[j]) )
cld		<- lapply(seq_len(nrow(theta)),function(i)#
			{																		#
				ans	<- lapply(c(1), function(r)#
						{							#
							ibm		<- tpc[[r]][["ibm"]]#
							if(!m.known.states)#
							{#
								ibm	<- ibm.init.model(m.type, loc.type, m.popsize, theta0, resume= 0)#
								ibm	<- ibm.collapse(ibm)								#
							}	#
							ibm[["beta"]][['i']][["status"]]['i']	<- theta[i,"acute"]#
							ibm[["beta"]][["base"]]					<- theta[i,"base"]	#
							beta.stratified							<- acute.get.rates(ibm, per.capita.i=1)#
							tipc.table								<- tpc[[r]][["tpc.table.all"]]#
							#print(beta.stratified)#
							#print(tipc.table)#
							tipc.lkl								<- acute.loglkl(tipc.table, beta.stratified, sample.prob2, tpc[[r]][["ibm"]][["beta"]][["dT"]])[["tipc.lkl"]]#
							tipc.lkl #/ sum(tipc.lkl)							#
						})#
				names(ans)<- paste('r',seq_along(ans),sep='')#
				ans[[1]]#
			})
tmp<- sapply(cld, function(x)   apply(x,2,sum)		)#
	plot(1,1,type='n',xlim=range(theta.acute),ylim=range(tmp))#
	cols<- rainbow(ncol(tmp))#
	sapply(seq_len(ncol(tmp)),function(j)   lines(tmp[,j],col=cols[j]) )
tmp
cld
data(popart.triplets.130207)
popart.triplets.130207
str(popart.triplets.130207)
popart.phylo.com<- c("Ikwezi","Bloekombos","Delft South","Town II","Luvuyo","Kuyasa")
Town 2, Luvuyo and Kuyasa
popart.phylo.com
save(popart.phylo.com, file="/Users/Oliver/git/phylodesign/pkg/data/popart.phylo.com.rda")
popart.triplets.130207[ popart.triplets.130207$comid_old %in% popart.phylo.com, ]
popart.phylo.com<- c("Ikhwezi","Bloekombos","Delft South","Town II","Luvuyo","Kuyasa")
save(popart.phylo.com, file="/Users/Oliver/git/phylodesign/pkg/data/popart.phylo.com.rda")
popart.triplets.130207[ popart.triplets.130207$comid_old %in% popart.phylo.com, ]
popart.phylo.com	<- popart.triplets.130207[ popart.triplets.130207$comid_old %in% popart.phylo.com, ]
popart.phylo.com	<- popart.getdata.randomized.n(popart.phylo.com, 2500, 3, rtn.exp=1)
tmp	<- popart.getdata.randomized.n(popart.phylo.com, 2500, 3, rtn.exp=1)
tmp
popart.phylo.com
popart.getdata.randomized.n
data(popart.triplets.130207)
popart.triplets.130207
popart.triplets.130207$p.adults<- sapply(popart.triplets.130207$arm,function(x){(x %in% "A")*0.0056+(x %in% "B")*0.01+(x %in% "C")*0.013})
popart.triplets.130207
popart.triplets.130207$inc.rate<- popart.triplets.130207$p.adults
popart.triplets.130207
popart.triplets.130207$p.adults	<- ifelse(popart.triplets.130207$country==1,0.5,0.6)
popart.triplets.130207
save(popart.triplets.130207, file="/Users/Oliver/git/phylodesign/pkg/data/popart.triplets.130207.rda")
70000*0.37
70000*0.37*0.5
